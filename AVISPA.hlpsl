%% PROTOCOL: Project Postoffice Package
%% ALICE_BOB:
%% 1. s -> x : ({id,P)}PKX
%% 2. x -> p : (id,X)
%% 3. p -> s : (id,X,P)
%% 4. s -> x : n
%% 5. x -> p : (n,X)
%% 6. p -> s : (n,x,p)
%% 7. s -> p : (id)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle S, initiant le protocole
role server (S, P, X: agent,             
            PKs, PKp, PKx: public_key,
            ID: text,      
            SND, RCV: channel(dy)) 

played_by S def=

   local State: nat, 
             N: text

  init State:=0

  transition  
   
    0.  State=0 /\ RCV(start) =|> 
        State':=1 /\ SND({ID.P}_PKx) 

    2.  State=1 /\ RCV({ID.X.P}_PKs) =|> 
        State':=2 /\ N':=new() /\ SND({N'}_PKx)
        
    4.  State=2 /\ RCV({N.X.P}_PKs) =|> 
        State':=3 /\ SND({ID}_PKp)

end role

%%NOTE: the ' in Na' means: "assign to Na this value"

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% role user

role user (S,X: agent,             
            PKs, PKx: public_key,
            Kxp : symmetric_key,
            SND, RCV: channel(dy)) 
            
played_by X def=

  local State: nat, 
  ID, N: text,
  P : agent

  init State:=0

  transition  
   
    0.  State=0 /\ RCV({ID'.P'}_PKx) =|> 
	    State':=1 /\ SND({ID'.X}_Kxp) 

    2.  State=1 /\ RCV({N'}_PKx) =|> 
	    State':=2 /\ SND({N'.X}_Kxp)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% role post office

role officer (S,P: agent,             
            PKs, PKp: public_key,
            Kxp : symmetric_key,
            SND, RCV: channel(dy)) 
played_by P def=

  local State: nat, 
  ID, N: text,
  X : agent

  init State:=0

  transition  
   
    0.  State=0 /\ RCV({ID'.X'}_Kxp) =|> 
	    State':=1 /\ SND({ID'.X'.P}_PKs) 

    2.  State=1 /\ RCV({N'.X}_Kxp) =|> 
	    State':=2 /\ SND({N'.X.P}_PKs)

    3.  State=2 /\ RCV({ID}_PKp) =|>
        State':=3
    
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle caractérisant une session
role session(S, P, X: agent, PKs, PKp, PKx: public_key, Kxp: symmetric_key, ID: text) def=

  local SA, RA, SB, RB, SC, RC: channel(dy)

  composition 

	server(S,P,X,PKs,PKp,PKx,ID,SA,RA)
     /\ user(S,X,PKs,PKx,Kxp,SB,RB)
     /\ officer(S,P,PKs,PKp,Kxp,SC,RC)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle caractérisant le scenario à exécuter
role environment() def=

    const s, p, x: agent,
          pks, pkp, pkx, pki: public_key,
          kxp: symmetric_key,
          id:text

          
%%na, nb, alice_bob_na, alice_bob_nb: protocol_id
          

    intruder_knowledge = {s, p, x, pks, pkp, pkx, pki, inv(pki)}

    composition

    session(s, p, x, pks, pkp, pkx, kxp, id)

    %%    /\session(s, , x, pks, pkp, pkx, kxp, id)

%i denotes the intruder

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% pour l'instant, pas de section goal ici (donc pas de propriété à vérifier)

%goal
%  secrecy_of na
%  secrecy_of nb
%  authentication_on alice_bob_na
%  authentication_on alice_bob_nb
%end goal
%the option --split for hlps12if.exe outputs multiple IF files, one for each security property to check

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% lancement du rôle principal
environment()
