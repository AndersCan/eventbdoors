%% PROTOCOL: Project Postoffice Package
%% ALICE_BOB:
%% 1. s -> x : ({id,P)}PKX
%% 2. x -> p : (id,X)
%% 3. p -> s : (id,X,P)
%% 4. s -> x : n
%% 5. x -> p : (n,X)
%% 6. p -> s : (n,x,p)
%% 7. s -> p : (id)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle S, initiant le protocole
role server (S, P, X: agent,             
            PKs, PKp, PKx: public_key,
            id: text,      
            SND, RCV: channel(dy)) 

played_by S def=

   local State: nat, 
             N: text

  init State:=0

  transition  
   
    0.  State=0 /\ RCV(start) =|> 
        State':=1 /\ SND({id.P}_PKx) 

    2.  State=1 /\ RCV({id.X.P}_PKs) =|> 
        State':=2 /\ N'=new() /\ SND({N'}_PKx)
        
    4.  State=2 /\ RCV({N.X.P}_PKs) =|> 
        State':=3 /\ SND({id}_PKp)

end role

%%NOTE: the ' in Na' means: "assign to Na this value"

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% role bob à écrire

role user (S,X: agent,             
            PKx, PKs: public_key,
            Kxp : symetric_key,
            SND, RCV: channel(dy)) 
            
played_by X def=

  local State: nat, 
id, n: text
P : agent

  init State:=0

  transition  
   
    0.  State=0 /\ RCV({id'.P'}_PKx) =|> 
	State':=1 /\ SND({id',X}_Kxp) 

    2.  State=1 /\ RCV({N'}_PKx) =|> 
	State':=2 /\ SND({n'.X}_Kxp)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle caractérisant une session
role session(A, B: agent, PKa, PKb: public_key) def=

  local SA, RA, SB, RB: channel(dy)

  composition 

	alice(A,B,PKa,PKb,SA,RA)
     /\ bob(A,B,PKa,PKb,SB,RB)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle caractérisant le scenario à exécuter
role environment() def=

    const a, b: agent,
          pka, pkb, pki: public_key,
          na, nb, alice_bob_na, alice_bob_nb: protocol_id
          

    intruder_knowledge = {a, b, pka, pkb, pki, inv(pki)}

    composition

    session(a,b,pka,pkb)
    /\session(a,i,pka,pki)

%i denotes the intruder

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% pour l'instant, pas de section goal ici (donc pas de propriété à vérifier)

goal
  secrecy_of na
  secrecy_of nb
  authentication_on alice_bob_na
  authentication_on alice_bob_nb
end goal
%the option --split for hlps12if.exe outputs multiple IF files, one for each security property to check

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% lancement du rôle principal
environment()
