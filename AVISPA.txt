%% PROTOCOL: Project Postoffice Package
%% ALICE_BOB:
%% 1. s -> x : ({id,P)}PKX
%% 2. x -> p : (id,X)
%% 3. p -> s : (id,X,P)
%% 4. s -> x : n
%% 5. x -> p : (n,X)
%% 6. p -> s : (n,x,p)
%% 7. s -> p : OK/wrong
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle S, initiant le protocole
role alice (X: agent,             
            PKx: public_key,      
            SND, RCV: channel(dy)) 
played_by A def=

  local State: nat, 
        Na, Nb: text

  init State:=0

  transition  
   
    0.  State=0 /\ RCV(start) =|> 
        State':=1 /\ Na':=new() /\ SND({Na'.A}_PKb) /\ secret(Na',na,{A,B}) /\ witness(A,B,alice_bob_na,Na')

    2.  State=1 /\ RCV({Na.Nb'}_PKa) =|> 
        State':=2 /\ SND({Nb'}_PKb) /\ request(A,B,alice_bob_nb,Nb')

end role

%NOTE: the ' in Na' means: "assign to Na this value"

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% role bob à écrire

role bob (A, B: agent,             
          PKa, PKb: public_key,      
          SND, RCV: channel(dy)) 
%Note: secret(information, id/name, agents that is allowed to know Nb'), so this means that the nb secret denotes the Nb' variables in roles A and B
          
played_by B def=

  local Na, Nb: text

  transition  
   
    1.  RCV({Na'.A}_PKb) =|> 
	    Nb':=new() /\ SND({Na'.Nb'}_PKa) /\ secret(Nb',nb,{A,B}) /\ witness(B,A,alice_bob_nb,Nb') /\ request(B,A,alice_bob_na,Na')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle caractérisant une session
role session(A, B: agent, PKa, PKb: public_key) def=

  local SA, RA, SB, RB: channel(dy)

  composition 

	alice(A,B,PKa,PKb,SA,RA)
     /\ bob(A,B,PKa,PKb,SB,RB)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% définition du rôle caractérisant le scenario à exécuter
role environment() def=

    const a, b: agent,
          pka, pkb, pki: public_key,
          na, nb, alice_bob_na, alice_bob_nb: protocol_id
          

    intruder_knowledge = {a, b, pka, pkb, pki, inv(pki)}

    composition

    session(a,b,pka,pkb)
    /\session(a,i,pka,pki)
%i denotes the intruder

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% pour l'instant, pas de section goal ici (donc pas de propriété à vérifier)

goal
  secrecy_of na
  secrecy_of nb
  authentication_on alice_bob_na
  authentication_on alice_bob_nb
end goal
%the option --split for hlps12if.exe outputs multiple IF files, one for each security property to check

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% lancement du rôle principal
environment()
